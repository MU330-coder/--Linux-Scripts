#!/usr/bin/bash

#                        Networking/virustotal-pcap.sh
#
#                       Should be run as root. This script uses the VirusTotal API
#                       with any pcap file and tells you if its a malicious.
#                       
#                       should be used with the virustotal API key.
#
#                       The script was generated by ChatpGPT.
#


if [[ $(id -u) -ne 0 ]]; then
  echo "Please run as root."
  exit 1
fi

API_KEY="<API_KEY>"
PCAP_FILE_PATH="/home/bob/personal/projects/linux-management-scripts/network-packets.pcap"

# Step 1: Upload the file to VirusTotal
upload_response=$(curl --request POST \
  --url 'https://www.virustotal.com/api/v3/files' \
  --header "x-apikey: $API_KEY" \
  --form "file=@$PCAP_FILE_PATH")

# Extract the resource ID from the upload response
resource_id=$(echo "$upload_response" | jq -r '.data.id')

# Step 2: Check the analysis progress
analysis_response=$(curl --request GET \
  --url "https://www.virustotal.com/api/v3/analyses/$resource_id" \
  --header "x-apikey: $API_KEY")

# Extract the analysis status
analysis_status=$(echo "$analysis_response" | jq -r '.data.attributes.status')

# Step 3: Wait for the analysis to complete
while [[ "$analysis_status" != "completed" ]]; do
    sleep 10  # Wait for 10 seconds before checking again
    analysis_response=$(curl --request GET \
      --url "https://www.virustotal.com/api/v3/analyses/$resource_id" \
      --header "x-apikey: $API_KEY")
    analysis_status=$(echo "$analysis_response" | jq -r '.data.attributes.status')
done

# Step 4: Retrieve the analysis results
report_response=$(curl --request GET \
  --url "https://www.virustotal.com/api/v3/analyses/$resource_id" \
  --header "x-apikey: $API_KEY")

# Print the analysis results
echo "$report_response" | jq '.data.attributes.results'
